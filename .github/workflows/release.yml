name: kubex_go_release

on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch:

jobs:
  kubex_go_release:
    if: github.actor == 'faelmori' && github.ref == 'refs/heads/main' && startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Install UPX
        run: |
          sudo apt-get update
          sudo apt-get install -y upx zip tar curl gzip
          sudo apt-get install -y "$(sudo apt-cache show 'libzmq[1-9]-dev' | grep '^Package: ' | uniq | head -n1 | awk '{print $2}')"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Go
        uses: actions/cache@v3
        with:
          path: "${{ runner.tool_cache }}/go"
          # key: ${{ runner.os }}-go-${{ hashFiles('go.mod') }}
          key: ${{ runner.os }}-go-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install Go
        run: |
          export NON_INTERACTIVE=true
          bash -c "$(curl -sSfL 'https://raw.githubusercontent.com/faelmori/go-installer/refs/heads/main/go.sh')" -s --version "$(grep '^go ' go.mod | awk '{print $2}')"

      - name: Verify Go Installation
        run: go version

      - name: Cache Go Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ${{ github.workspace }}/go/pkg/mod
          #key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}
          key: ${{ runner.os }}-go-mod-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-mod-

      - name: Go Mod Tidy
        run: go mod tidy

      - name: Set version
        run: |
          test -d "$(realpath ./)/version" || mkdir -p "$(realpath ./)/version"
          echo -n $(git describe --tags --abbrev=0) > "$(realpath ./)/version/CLI_VERSION"

      - name: Build
        run: |
          go build -ldflags "-s -w -X main.version=${GITHUB_REF#refs/heads/} -X main.commit=$(git rev-parse HEAD) -X main.date=$(date +%Y-%m-%d)" -trimpath -o "$(realpath ./)/$(basename $(realpath ./))" "$(dirname $(grep -risn '^package main' $(realpath ./) | head -n1 | awk -F ':' '{print $1}'))"

      - name: Compress with UPX
        run: |
          upx "$(realpath ./)/$(basename $(realpath ./))" --force-overwrite --lzma --no-progress --no-color -qqq
          tar -czvf "$(realpath ./)/$(basename $(realpath ./)).tar.gz" "$(realpath ./)/$(basename $(realpath ./))" --remove-files
          sha256sum "$(realpath ./)/$(basename $(realpath ./)).tar.gz" > "$(realpath ./)/$(basename $(realpath ./)).tar.gz.sha256"

      - name: Upload to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: |
            $(realpath ./)/$(basename $(realpath ./)).tar.gz
            $(realpath ./)/$(basename $(realpath ./)).tar.gz.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Clean Go Build Cache
        run: go clean -cache -modcache -i -r
